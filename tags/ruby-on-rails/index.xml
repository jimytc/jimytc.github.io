<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ruby on Rails on Jim Chen</title><link>https://jimytc.com/tags/ruby-on-rails/</link><description>Recent content in Ruby on Rails on Jim Chen</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 30 Aug 2021 10:02:30 +0800</lastBuildDate><atom:link href="https://jimytc.com/tags/ruby-on-rails/index.xml" rel="self" type="application/rss+xml"/><item><title>Specify Rails Version When Init</title><link>https://jimytc.com/posts/2021/08/30/qnote_on_specify_rails_version_when_init/</link><pubDate>Mon, 30 Aug 2021 10:02:30 +0800</pubDate><guid>https://jimytc.com/posts/2021/08/30/qnote_on_specify_rails_version_when_init/</guid><description>It&amp;rsquo;s common to installed multiple versions of the same gem. For example, rails with 5.2.7 and 6.1.1, etc. By default, it uses the latest release.
To specify the old one, just use command like below, which specifies the expected version with underscode _.</description></item><item><title>Have Custom Attribute for a Rails ActiveRecord Model</title><link>https://jimytc.com/posts/2020/08/03/note_rails_active_records_attribute/</link><pubDate>Mon, 03 Aug 2020 17:00:19 +0800</pubDate><guid>https://jimytc.com/posts/2020/08/03/note_rails_active_records_attribute/</guid><description>Framework is pretty opinionated in its area, but that also means it handles many repetitive and tedious tasks. When using ORM like ActiveRecord, it saved us so much time defining which model has what attributes.</description></item><item><title>You but Not Only You</title><link>https://jimytc.com/posts/2019/05/20/you-but-not-only-you/</link><pubDate>Mon, 20 May 2019 23:54:49 +0800</pubDate><guid>https://jimytc.com/posts/2019/05/20/you-but-not-only-you/</guid><description>RailsConf 2019, as a technical conference, there is a bunch of presentations about the fundamentals, deep inside the Rails framework, leveling up the skills. Rather than deep diving into those talks I attended, I would like to share more about DHH and other speakersâ€™ thoughts about the Rails community, the connections within it and the bonds with the world.</description></item></channel></rss>